using Characters;
using Managers;
using StatusEffects.Scriptable;
using UnityEngine;

namespace StatusEffects
{
	public class Invulnerability : StatusEffect
	{
		/// <summary>
		/// Check if rendere is ON or OFF.
		/// </summary>
		private bool _isVisible;
		
		public Invulnerability(ScriptableStatusEffect data, Character target, Character caster) : base(data, target, caster)
		{
			_isVisible = true;
		}

		protected override void Delay()
		{
			throw new System.NotImplementedException();
		}

		protected override void Activate()
		{
			Target.IsInvulnearable = true;
			
			// Play sound.
			SoundManager.Instance.PlaySingleSfx(((ScriptableInvulnerability) Data).StartSfx);
		}

		protected override void End()
		{
			Target.GetComponent<SpriteRenderer>().enabled = true;
			Target.IsInvulnearable = false;
		}

		protected override void Repeat()
		{
			if (_isVisible)
			{
				Target.GetComponent<SpriteRenderer>().enabled = false;
				_isVisible = false;
			}
			else
			{
				Target.GetComponent<SpriteRenderer>().enabled = true;
				_isVisible = true;
			}
		}
	}
}
